import pandas as pd
import duckdb

db_file = "my.db"

def create_tables():
    """—Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –Ω–∞ –æ—Å–Ω–æ–≤–µ schema.sql"""
    try:
        with open("queries/schema.sql", "r", encoding="utf-8") as f:
            schema_query = f.read()

        with duckdb.connect(db_file) as conn:
            conn.execute(schema_query)

        print("‚úÖ —Ç–∞–±–ª–∏—Ü—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!")
    except Exception as e:
        print(f"‚ùå –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü: {e}")

def read_xl(sheet_name, columns_dict):
    """—á—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ excel"""
    try:
        temp_df = pd.read_excel(
            "source/extendedglobalweatherdata.xlsx",
            sheet_name=sheet_name,
            usecols=columns_dict.keys()
        ).rename(columns=columns_dict)
        return temp_df
    except Exception as e:
        print(f"‚ùå –æ—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ {sheet_name}: {e}")
        return None

def insert_to_db(temp_df, tbl_name):
    """–≤—Å—Ç–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü—É duckdb"""
    try:
        if temp_df is None or temp_df.empty:
            print(f"‚ö† –¥–∞–Ω–Ω—ã–µ –¥–ª—è {tbl_name} –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.")
            return

        with duckdb.connect(db_file) as conn:
            for _, row in temp_df.iterrows():
                placeholders = ', '.join(['?'] * len(row))
                columns = ', '.join(temp_df.columns)
                query = f"insert into {tbl_name} ({columns}) values ({placeholders})"
                conn.execute(query, tuple(row))

        print(f"‚úÖ –¥–∞–Ω–Ω—ã–µ –≤—Å—Ç–∞–≤–ª–µ–Ω—ã –≤ —Ç–∞–±–ª–∏—Ü—É {tbl_name}")
    except Exception as e:
        print(f"‚ùå –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Å—Ç–∞–≤–∫–µ –≤ {tbl_name}: {e}")

def create_views():
    """—Å–æ–∑–¥–∞–Ω–∏–µ –≤—å—é—à–µ–∫ –Ω–∞ –æ—Å–Ω–æ–≤–µ views.sql"""
    try:
        with open("queries/views.sql", "r", encoding="utf-8") as f:
            views_query = f.read()

        with duckdb.connect(db_file) as conn:
            conn.execute(views_query)

        print("‚úÖ –≤—å—é—à–∫–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!")
    except Exception as e:
        print(f"‚ùå –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤—å—é—à–µ–∫: {e}")

def create_n_insert():
    """–æ—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è: –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö, —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü, –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö"""
    try:
        print("üìå –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã weather...")
        with duckdb.connect(db_file) as conn:
            conn.execute("select 1 from weather").fetchone()
        print("‚úÖ –¥–∞–Ω–Ω—ã–µ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —ç—Ç–∞–ø –∑–∞–≥—Ä—É–∑–∫–∏.")
    except:
        print("‚ö† –¥–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç, –Ω–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É...")
        create_tables()

        tables_dict = {
            "locations": {  
                "columns": {
                    "location_id": "location_id",
                    "country": "country",
                    "location_name": "location_name",
                    "latitude": "latitude",
                    "longitude": "longitude",
                    "timezone": "timezone"
                },
                "table_name": "locations"
            },
            "weather": {  
                "columns": {
                    "weather_id": "weather_id",
                    "location_id": "location_id",
                    "last_updated": "last_updated",
                    "temperature_celsius": "temperature_celsius",
                    "condition_text": "condition_text",
                    "humidity": "humidity",
                    "wind_kph": "wind_kph"
                },
                "table_name": "weather"
            },
            "air_quality": {
                "columns": {
                    "air_quality_id": "air_quality_id",
                    "location_id": "location_id",
                    "last_updated": "last_updated",
                    "air_quality_pm2.5": "air_quality_pm2_5",
                    "air_quality_pm10": "air_quality_pm10"
                },
                "table_name": "air_quality"
            }
        }

        for sheet, details in tables_dict.items():
            temp_df = read_xl(sheet, details["columns"])
            insert_to_db(temp_df, details["table_name"])

        print("‚úÖ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!")
        create_views()

# –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
create_n_insert()
